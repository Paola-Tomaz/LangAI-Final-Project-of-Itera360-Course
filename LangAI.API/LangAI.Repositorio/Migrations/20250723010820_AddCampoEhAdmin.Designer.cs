// <auto-generated />
using LangAI.Repositorio.Contextos;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LangAI.Repositorio.Migrations
{
    [DbContext(typeof(LangAIContexto))]
    [Migration("20250723010820_AddCampoEhAdmin")]
    partial class AddCampoEhAdmin
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("LangAI.Dominio.Entidades.Idioma", b =>
                {
                    b.Property<string>("Codigo")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Codigo");

                    b.ToTable("Idiomas", (string)null);

                    b.HasData(
                        new
                        {
                            Codigo = "pt-BR",
                            Nome = "Português"
                        },
                        new
                        {
                            Codigo = "en-US",
                            Nome = "Inglês"
                        },
                        new
                        {
                            Codigo = "fr-CA",
                            Nome = "Francês"
                        },
                        new
                        {
                            Codigo = "de-DE",
                            Nome = "Alemão"
                        },
                        new
                        {
                            Codigo = "ja-JP",
                            Nome = "Japonês"
                        });
                });

            modelBuilder.Entity("LangAI.Dominio.Entidades.Personagem", b =>
                {
                    b.Property<int>("PersonagemID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PersonagemID"), 1L, 1);

                    b.Property<string>("FraseApresentacao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdiomaCodigo")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("IdiomaID")
                        .HasColumnType("int");

                    b.Property<string>("ImagemUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PersonagemID");

                    b.HasIndex("IdiomaCodigo");

                    b.ToTable("Personagens", (string)null);

                    b.HasData(
                        new
                        {
                            PersonagemID = 1,
                            FraseApresentacao = "Olá, sou a Lola e vou te ensinar Português!",
                            IdiomaCodigo = "pt-BR",
                            IdiomaID = 0,
                            ImagemUrl = "",
                            Nome = "Lola"
                        },
                        new
                        {
                            PersonagemID = 2,
                            FraseApresentacao = "Hi, I'm Tyler and i'll teach you English!",
                            IdiomaCodigo = "en-US",
                            IdiomaID = 0,
                            ImagemUrl = "",
                            Nome = "Tyler"
                        },
                        new
                        {
                            PersonagemID = 3,
                            FraseApresentacao = "Bonjour, je suis Sebastian et je vais vous apprendre le français!",
                            IdiomaCodigo = "fr-CA",
                            IdiomaID = 0,
                            ImagemUrl = "",
                            Nome = "Sebastian"
                        },
                        new
                        {
                            PersonagemID = 4,
                            FraseApresentacao = "Hallo, ich bin Klaus und ich bringe dir Französisch bei!",
                            IdiomaCodigo = "de-DE",
                            IdiomaID = 0,
                            ImagemUrl = "",
                            Nome = "Klaus"
                        },
                        new
                        {
                            PersonagemID = 5,
                            FraseApresentacao = "こんにちは、I’m Miyuki と I’l が日本語をお教えします！",
                            IdiomaCodigo = "ja-JP",
                            IdiomaID = 0,
                            ImagemUrl = "",
                            Nome = "Miyuki"
                        });
                });

            modelBuilder.Entity("Usuario", b =>
                {
                    b.Property<int>("UsuarioID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UsuarioID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UsuarioID"), 1L, 1);

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<bool>("EhAdmin")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Email");

                    b.Property<string>("IdiomaSelecionadoCodigo")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ImagemPerfilUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Nome");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Senha");

                    b.Property<int>("TipoUsuario")
                        .HasColumnType("int");

                    b.Property<int>("XP")
                        .HasColumnType("int");

                    b.HasKey("UsuarioID");

                    b.HasIndex("IdiomaSelecionadoCodigo");

                    b.ToTable("Usuarios", (string)null);
                });

            modelBuilder.Entity("LangAI.Dominio.Entidades.Personagem", b =>
                {
                    b.HasOne("LangAI.Dominio.Entidades.Idioma", "Idioma")
                        .WithMany("Personagens")
                        .HasForeignKey("IdiomaCodigo");

                    b.Navigation("Idioma");
                });

            modelBuilder.Entity("Usuario", b =>
                {
                    b.HasOne("LangAI.Dominio.Entidades.Idioma", "IdiomaSelecionado")
                        .WithMany()
                        .HasForeignKey("IdiomaSelecionadoCodigo");

                    b.Navigation("IdiomaSelecionado");
                });

            modelBuilder.Entity("LangAI.Dominio.Entidades.Idioma", b =>
                {
                    b.Navigation("Personagens");
                });
#pragma warning restore 612, 618
        }
    }
}
